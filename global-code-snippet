<style>
@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

h1, h2, h3, h4, h5, h6, div, p, span, button, a, input, select, option, textarea {
 font-family: "Montserrat", sans-serif !important;
}

.course-title {
  position: relative;
  font-weight: 600 !important;
  margin-bottom: 15px !important;
}

.course-title::after {
  content: "";
  position: absolute;
  bottom: -5px; 
  left: 0;
  width: 70px; 
  border-bottom: 5px solid black;
}

#header {
box-shadow: 4px 1px 10px #c7c6cb;
height: 75px;
}

#header-left {
  padding-left: 22px !important
}

#header-right {
display: flex;
align-items: center;
}

.header-links-container  {
display: flex !important;
align-items: center;

a:nth-of-type(4) {
  display: flex;
  align-items: center;
  background-color: #f8c521;
  padding: 4px 12px;
  border-radius: 0.25rem;
  height: 2rem;
 }
}

.headerheight {
height: unset !important;
}

@media (max-width: 873px) {
  .header-links-container {
    display: none  !important;
  }
}

.header-link {
font-weight: 600;
}

.header-link.active-link {
  color: #8f8dc2;
}

.header-dropdown-button-v2 {
border-left: 1.5px solid rgb(211, 209, 206) !important;
padding-left: 15px  !important;
}

.header-center-img {
max-height: 40px !important;
}

.button {
border-radius: 40px;
}
</style>
<script>
$(document).ready(function () {
  $('.header-link').each(function () {
    if (this.href === window.location.href) {
      $(this).addClass('active-link');
    }
  });
});
</script>

<!-- START Personalize by adding first name  -->
<script>
  //when the page fully loads, run the following function
  $(document).ready(function() {
    var welcomeMessageBefore = "Hi, ";
    var welcomeMessageAfter = "!";
    
    if(typeof skilljarUser !== 'undefined' && skilljarUser.firstName.length <= 15 && skilljarUser.firstName.length > 1){
        $('.first-name').html(welcomeMessageBefore + skilljarUser.firstName + welcomeMessageAfter);
        $('.first-name').css('display', 'inline-block');
        $('.first-name').css('color', 'inherit');
        $('.first-name').css('margin-right', '5px');
    }
    else{
      $('.first-name').css('display', 'none');
    }
  });
</script>
<!-- END Personalize by adding first name  -->
<!-- START add scroll to top button to entire site -->
<style>
button#back-to-top-btn {
  z-index: 99;
  position: fixed;
  bottom: 44px;
  right: 15px;
  width: 40px;
  height: 40px;
  border: none;
  padding: 0px;
  background-color: #ffffff;
  border-radius: 5px;
  cursor: pointer;
  display: none;
  align-items: center;
  box-shadow: 0px 0px 5px 1px #d8d8d8;
  justify-content: center;
}
button#back-to-top-btn i {
  font-size: 18px;
  color: #0066cc;
} 
</style>
<script>
/* only run logic to add button if on Page object. */
$('body').append('<button id="back-to-top-btn" class="hidden"><i class="fa fa-arrow-up" aria-hidden="true"></i></button>');
// Select the button
const backToTopButton = document.querySelector("#back-to-top-btn");
// Add an event listener to the window scroll event
window.addEventListener("scroll", () => {
  // Get the current scroll position
  let currentScrollPosition = window.pageYOffset;

  // If the user has scrolled up and the button is hidden, show it
  if (currentScrollPosition > 0 && backToTopButton.classList.contains("hidden")) {
    backToTopButton.classList.remove("hidden");
    $('#back-to-top-btn').fadeToggle( "400", "linear" );
  } 
  // If the user has not scrolled up and the button is not hidden, hide it
  else if (currentScrollPosition <= 0 && !backToTopButton.classList.contains("hidden")) {
    backToTopButton.classList.add("hidden");
    $('#back-to-top-btn').fadeToggle( "400", "linear" );
  }
});

// Add an event listener to the button click event
backToTopButton.addEventListener("click", () => {
  // Scroll back to the top of the page
  window.scrollTo({
    top: 0,
    left: 0,
    behavior: "smooth"
  });
});

</script>
<!-- END add scroll to top button to entire site -->

<!-- START Customize Text On Error/404 Page -->
<script>
$(document).ready(function () {
  if($('.sj-page-error-404').length){
    /* Change the 'pageNotFoundMessage' variable value to your desired error title */
    var pageNotFoundMessage = 'Page error';
    /* Change the 'errorExplanation' variable value to your desired error description */
    var errorExplanation = 'You don't have permission to access to this content or the link is invalid.<br><br><a href="/">Go back to Home</a>';
    
    $(".sj-text-page-not-found span").html(pageNotFoundMessage)
    $(".sj-text-page-not-found-explanation span").html(errorExplanation)
  }
});
</script>

<!-- Add progress bar to lesson footer -->
<script>
$(document).ready(function () {
  $('.next-lesson-button').each(function () {
    // Create progress bar structure
    var $progressBarInner = $('<span>', {
      class: 'progress-bar-inner button-background',
      style: 'width: 0%;',
      'aria-valuemin': 0,
      'aria-valuemax': 100,
      'aria-valuenow': 0,
      role: 'progressbar'
    });

    var $progressBar = $('<div>', { class: 'progress-bar' }).append($progressBarInner);
    $(this).append($progressBar);

    // Count total and completed lessons
    var $wrapper = $('.lessons-wrapper');
    var totalLessons = $wrapper.find('a').length;
    var completedLessons = $wrapper.find('a.lesson-complete').length;

    // Calculate percentage
    var progress = totalLessons > 0 ? Math.round((completedLessons / totalLessons) * 100) : 0;

    console.log('Total:', totalLessons, 'Completed:', completedLessons, 'Progress:', progress + '%');

    // Update progress bar
    $progressBarInner.attr('aria-valuenow', progress);
    $progressBarInner.css('width', progress + '%');
  });
});
</script>
<script>
$(document).ready(function () {
  var $progress = $('.progress-bar.button-border-color');
  var $lessons = $('.cp-lessons');

  if ($progress.length && $lessons.length) {
    $progress.insertBefore($lessons); // Move the progress bar before the lessons <h2>
  }
});
</script>
<style>
.sj-ribbon.sj-course-ribbon.sj-ribbon-registered.sj-course-ribbon-registered {
  border: none !important; 
  background-color: #0f9bd7 !important; 
  color: #fff !important; 
}

.sj-ribbon.sj-ribbon-registered {
  border: none !important; 
  background-color: #0f9bd7 !important; 
  color: #fff !important; 
}

.sj-ribbon.sj-course-ribbon.sj-ribbon-complete.sj-course-ribbon-complete { 
  color: #fff;
}

.catalog-lower-cta-button {
  border-radius: 40px !important;
  transition: background-color 300ms ease-out;
}

.catalog-lower-cta-button:hover {
  background-color: #8f8dc2 !important;
}

.course-overview__content__lesson__type-icon {
  display: none;
}

.course-overview__content__lesson__title {
  margin-left: 12px;
}

/* Course progress styling */
.cp-summary-wrapper {
  border: none;
}

.cp-summary-wrapper h1 {
  font-weight: 500;
  position: relative;
  margin-bottom: 40px;
}

/* Add line under lesson title */
.cp-summary-wrapper h1::after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 0; 
  width: 70px; 
  border-bottom: 5px solid black;
}

.cp-lessons {
  color: #1484ba;
  font-weight: 600;
  margin-top: 12px;
}

.button-background {
  background-color: #0f9bd7;
}

#path-curriculum-progress-bar-annotation-text {
  color: #0f9bd7;
  font-weight: 600;
}

#path-curriculum-progress-bar {
  border: none; 
  background-color: #e9e8f3;
}

#path-curriculum-progress-bar .button-background {
  background: #0f9bd7 !important; 
}

.progress-bar {
  background: #e9e8f3 !important;
  border-radius: 4px;
  border: none !important;
  height: 8px !important;
}

.progress-bar-inner {
  height: 8px !important;
  border-radius: 4px;
}

.sj-page-curriculum #cp-content .tabs-wrapper-v2 {
  padding-left: .9375em !important;
}

  /* styling for the error title */
.sj-page-error #skilljar-content h1{
  color: #222;
  font-size: 32px;
  font-weight: 400;
  margin: 0 0 15px;
}
/* styling for the error description */
.sj-page-error #skilljar-content p {
    font-size: 18px;
    line-height: 22px;
}
</style>
<!-- END Customize Text On Error/404 Page -->

<!-- START Change Course Detail Curriculum Page Lessons into Links -->
<script>
$(document).ready(function() {
  $('.dp-curriculum > li:not(.section)').each(function() {
    var url = $(this).attr('data-url') + '?reg=1';
    $(this).children().wrapAll('<a href="' + url + '"></a>');
  });
});

</script>
<!-- END Change Course Detail Curriculum Page Lessons into Links -->

<style>
.dp-summary-wrapper > h1 {
  font-weight: 600;
  position: relative;
  margin-bottom: 20px;
}

.dp-summary-wrapper > h1::after {
  content: "";
  position: absolute;
  bottom: -8px;
  left: 0; 
  width: 70px; 
  border-bottom: 5px solid black;
}

.dp-summary-wrapper {
  border: none !important;
}

.top-row-grey.top-row-white-v2.padding-top.padding-side.row-v2 .dp-row-flex-v2 {
  justify-content: space-between;
  flex-direction: row-reverse !important;
}

#dp-details h3 {
  font-weight: 500;
}

#dp-details .row.hide-for-small.padded-side-bottom {
  display: flex !important;
  flex-direction: row-reverse;
  justify-content: left;
}

#dp-details .row.hide-for-small.padded-side-bottom .large-7.columns {
  padding: 0 40px 40px 40px !important;
}

.push-4 {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  left: unset;
}

.pull-8 {
  right: unset;
}

.dp-curriculum {
background-color: #f7f6fb;
border-radius: 10px;
padding: 25px !important;
}

.dp-long-description {
  background-color: #0f9bd7; 
  padding: 25px !important;
  color: #fff; 
  border-radius: 10px;
}

.dp-long-description > h3 {
    color: #fff; 
}

.section-container .title > .focus-link-v2 {
  font-size: 20px !important;
  font-weight: 600;
  padding-left: 0 !important;
  padding-bottom: 18px !important;
}

.section-container .content { 
  border: none !important;
}
.section-container > section:nth-of-type(2) > p {
left: 150px !important
}

/* Add underline to active tab */
.section-container > section.active > p {
  border: none !important; 
}

/* Add underline to active tab */
.section-container > section.active > p > a {
  border-bottom: 4px solid #1b1a3a !important; 
}

.top-row, .top-row-grey  {
  margin-top: 20px !important;
  padding-bottom: 0;
}

.content {
padding-left: 0 !important
}

.lessons-wrapper {
  margin-top: 10px;  
}

.facebook-button-wrapper {
display: none !important;
}

.twitter-button-wrapper {
display: none !important;
}

.dp-curriculum > li:not(.section) > a {
  font-size: 18px;
  color: #1b1a3a;
  font-weight: 500;
}
</style>

<style>
/* Set a maximum width for the main lesson content area */
#lesson-main-content {
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}

/* Set a maximum width for the lesson title area */
.lesson-top {
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
  border-bottom: none !important;

> h2 {
  font-weight: 500 !important;
}
}

.filter-group-title {
  margin-top: 20px;
}

#catalogSearchInput {
  border-radius: 8px;  
  border: 1.5px solid #ccc;
}

#catalog-filter-menu .margin-bottom {
  font-weight: 500;
}

#catalog-left-nav {
  padding: 25px 25px;  
}

.catalog-header > h3 {
  position: relative;
  margin-bottom: 15px !important;
}

.catalog-header > h3::after {
  content: "";
  position: absolute;
  bottom: -5px;
  left: 0; 
  width: 10%; 
  border-bottom: 5px solid black;
}

/* Add line under lesson title */
.lesson-top::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0; 
  width: 70px; 
  border-bottom: 5px solid black;
}

.lesson-row.lesson-active + .lesson-number {
  color: #000 !important;
  font-weight: 700;
}

.lesson-complete .lesson-number {
  color: #aba9d1;
}

.lesson-row .type-icon {
  display: none !important;
}

.lesson-row .title {
  left: 50px !important;
}

.unviewed-lesson {
  color: #181937; 
}

.start-button {
  font-weight: 500 !important;
  padding-left: 20px;
  padding-right: 35px;
}

.start-button::after {
  content: ">"; 
  position: absolute;
  right: 15px; /* Position the ">" symbol towards the right inside the button */
  top: 50%; /* Vertically center it */
  transform: translateY(-50%); /* Vertically align the ">" symbol */
  font-size: 18px; /* Adjust the size of the symbol */
  color: #fff; /* Set the color of the symbol */
}

#resume-button {
  display: flex;
  align-items: flex-start;
  width: 100%;
  margin-left: 0; 
  margin-right: 0;
  font-weight: 500 !important;  
}

#resume-button .resume-button {
  background-color: #0f9bd7;
}

/* Lesson footer styling */
#lp-footer {
   display: flex;
   flex-direction: row;
   align-items: center;
   justify-content: space-between;
  height: 80px;
  background-color: #f6f6fa !important;
  border: none !important;
  padding: 0px 24px;
}

#lp-footer:has(> :nth-child(2):last-child) {
  justify-content: flex-end; 
}

#lp-footer .left .prev-lesson-button {
  background-color: #cfcde6;
  border-radius: 5px;
  padding: 12px;
  line-height: unset;
}

#lp-footer .left .prev-lesson-button > .button-content > .lesson-title-label {
  display: none;
  }

#lp-footer .left .prev-lesson-button .button-content > span > span {
  color: #fff !important;
  font-weight: bold;
}

#lp-footer .left .prev-lesson-button .button-content > i {
  color: #fff !important;
  font-weight: 600;
}

#lp-footer .right .next-lesson-button .next-lesson-link {
  position: relative;
  background-color: #0f9bd7;
  font-weight: 600;
  border-radius: 5px;
  padding: 12px;
  border: none;
  width: 100px;
  font-size: 16px;
}

#lp-footer .right .next-lesson-button .next-lesson-link > span {
  margin-right: 10px;
}

.next-lesson-link::after {
  content: ">"; 
  position: absolute;
  right: 15px; /* Position the ">" symbol towards the right inside the button */
  top: 50%; /* Vertically center it */
  transform: translateY(-50%); /* Vertically align the ">" symbol */
  font-size: 18px; /* Adjust the size of the symbol */
  color: #fff; /* Set the color of the symbol */
}
</style>

<style>
/* START Style for sjwc-section-title - Final Adjustments */
h3.sjwc-section-title {
  background-color: transparent !important; /* Plain background */
  border-bottom: none !important; /* Remove any default bottom borders on h3 */
  padding: 0 !important; /* Remove any default padding */
  margin-top: 28.125px !important; /* Increased top margin by 25% (22.5px * 1.25) */
  margin-bottom: 45px !important; /* Bottom margin */
  width: fit-content !important;
  font-size: 26px !important; /* Large text */
  font-weight: 500 !important; /* Medium 500 text */
  font-family: 'Montserrat', sans-serif !important; /* Ensure Montserrat is used */
  position: relative !important; /* Needed for absolute positioning of the bar */
}

h3.sjwc-section-title::after {
  content: '';
  position: absolute !important;
  left: 0 !important;
  bottom: -28.6px !important; /* Increased space by 30% (-22px * 1.3) */
  display: block !important;
  width: 100px !important; /* Doubled width of the bar */
  height: 8px !important; /* Increased thickness by 3px (5px + 3px) */
  background-color: #cecce6 !important; /* Bar color */
  border-radius: 5px !important; /* Rounded corners */
}
/* END Style for sjwc-section-title - Final Adjustments */
</style>

<style>
/* START Add softer drop shadow to the left navigation sidebar */
.lp-left-nav {
    box-shadow: 4px 1px 10px #c7c6cb;
}
/* END Add softer drop shadow to the left navigation sidebar */
</style>

<style>
/* Style for lesson sidebar */

/* General styling for all lesson items (default white background and black text) */
#lp-left-nav a.lesson {
  display: block !important;
  padding: 10px 15px 10px 0 !important;
  margin-bottom: 5px !important;
  text-decoration: none !important;
  background-color: #fff !important; /* White background for unselected */
  border-radius: 5px !important;
  position: relative; /* For positioning the number */
  transition: background-color 0.3s ease;
}

.lesson-incomplete {
  color: #000 !important;
}

/* Styling for hovered lesson items (lighter blue background and white text) */
#lp-left-nav a.lesson:hover {
  background-color: #cfcde4 !important;
  cursor: pointer !important;
}

/* Styling for active/selected lesson items (dark blue background and black text by default) */
#lp-left-nav .lesson-active,
#lp-left-nav a.lesson.lesson-active,
#lp-left-nav .current-item {
  color: #000 !important; /* Black text for selected when not hovered */
  font-weight: 700 !important; /* Make the font bold when active */
  /* Removed the problematic background: #8f8dc2; */
}

/* Force transparency on the active lesson to remove the box */
#lp-left-nav .lesson-active {
  background-color: transparent !important;
}

/* You might also want to style elements within the lesson-row for better visual distinction */
#lp-left-nav a.lesson .lesson-row {
  display: flex !important;
  align-items: center !important;
}

#lp-left-nav a.lesson .bullet {
  margin-right: 50px !important; /* Keep for potential spacing adjustments */
}

#lp-left-nav a.lesson .type-icon {
  margin-right: 10px !important;
}

#lp-left-nav a.lesson .title {
  flex-grow: 1 !important;
}

/* Lighten the right sidebar border */
.lp-left-nav {
  border-right-color: #e0e0e0 !important; /* Example: Light grey */
  padding: 15px;
}

/* Style for the generated numbers */
.lesson-number {
  position: absolute;
  left: 52px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 0.9em;
  color: #333; /* Adjust color */
  width: 20px; /* Adjust width for alignment */
  text-align: right;
  transition: color 0.3s ease-in-out; /* Optional: Add a smooth transition */
}

/* END Style for lesson sidebar */
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const lessonItems = document.querySelectorAll('#lp-left-nav a.lesson');

  lessonItems.forEach((lesson, index) => {
    const numberSpan = document.createElement('span');
    numberSpan.textContent = `${index + 1}.`;
    numberSpan.classList.add('lesson-number');
    lesson.appendChild(numberSpan);
  });
});
</script>

<!--  Add styling for unviewed lessons -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.lesson-row').forEach(row => {
      const bullet = row.querySelector('.bullet');
      const icon = bullet?.querySelector('i');
      const title = row.querySelector('.title');

      if (icon && icon.classList.contains('unviewed') && title) {
        title.classList.add('unviewed-lesson');
      }
    });
  });
</script>

<script>
$(document).ready(function () {
  $('.fa .course-overview__content__lesson__complete-icon .fa-circle-o.unviewed').each(function () {
    $(this).closest('a').addClass('has-unviewed');
  });
});
</script>

<!-- START Add View Certificate and add to LinkedIn button to lesson -->
<style>
/* Style the button container */
div#certificate-buttons-container {
  display: none;
  justify-content: center;
  padding: 15px 24px;
  gap: 20px;
}

/* Style the View Certificate button */
button.certificate-button {
  border: none;
  background-color: #007bff;
  color: white;
  padding: 10px 20px;
  font-size: 18px;
  border-radius: 5px;
  cursor: pointer;
  margin: 0px !important;
}

/* Style the Add to LinkedIn button */
button.add-to-linkedin-button {
  border: none;
  background-color: #e43883;
  color: white;
  padding: 10px 20px;
  font-size: 18px;
  border-radius: 5px;
  cursor: pointer;
  margin: 0px !important;
}

/* Style the buttons hover state */
button.certificate-button:hover,
button.add-to-linkedin-button:hover {
  background-color: #ab2a62;
}
</style>
<script>
$(document).ready(function(){
  if($('.sj-page-lesson').length && typeof skilljarCourseProgress !== 'undefined'){
    // Check if the certificate object and HTML container exist
    if (skilljarCourseProgress.certificate && $('#certificate-buttons-container').length) {
      // Extract the certificate ID from the certificate URL
      let certificateId = skilljarCourseProgress.certificate.url.split("/").pop();

      // Create the certificate button
      let certificateButton = document.createElement("button");
      certificateButton.innerHTML = "View Certificate";
      certificateButton.classList.add("certificate-button");
      certificateButton.addEventListener("click", () => {
        window.location.href = skilljarCourseProgress.certificate.url;
      });

      // Create the add to LinkedIn button
      let addToLinkedInButton = document.createElement("button");
      addToLinkedInButton.innerHTML = "Add to LinkedIn";
      addToLinkedInButton.classList.add("add-to-linkedin-button");
      addToLinkedInButton.addEventListener("click", () => {
        window.location.href = window.location.origin + '/c/' + certificateId + '/add-to-linkedin';
      });

      // Append the buttons to the container element
      document.querySelector('#certificate-buttons-container').innerHTML = '';
      document.querySelector("#certificate-buttons-container").appendChild(certificateButton);
      document.querySelector("#certificate-buttons-container").appendChild(addToLinkedInButton);
      document.querySelector("#certificate-buttons-container").style.display = 'flex';
    }
  }
})
</script>
<!-- END Add View Certificate and add to LinkedIn button to lesson -->
